syntax = "proto3";

package sonr.identity;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "sonr/identity/params.proto";
import "sonr/identity/did_document.proto";

option go_package = "github.com/sonrhq/sonr/x/identity/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/core/params/identity";
  
  }
  
  // Queries a list of DIDDocument items.
  rpc DIDDocument    (QueryGetDIDDocumentRequest) returns (QueryGetDIDDocumentResponse) {
    option (google.api.http).get = "/sonrhq/sonr/identity/did_document/{index}";
  
  }
  rpc DIDDocumentAll (QueryAllDIDDocumentRequest) returns (QueryAllDIDDocumentResponse) {
    option (google.api.http).get = "/sonrhq/sonr/identity/did_document";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetDIDDocumentRequest {
  string index = 1;
}

message QueryGetDIDDocumentResponse {
  DIDDocument dIDDocument = 1 [(gogoproto.nullable) = false];
}

message QueryAllDIDDocumentRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllDIDDocumentResponse {
  repeated DIDDocument                            dIDDocument = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination  = 2;
}

